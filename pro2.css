*{
    padding: 3px;
    margin: 0;
    border: 0;
    font-weight: normal;
    font-size: 100%;
    line-height: 1;
    font-family: inherit;

}
body{

    background-image: url(https://static01.nyt.com/images/2020/10/29/style/28MOON-01/oakImage-1603985177355-superJumbo.jpg) ;
    background-repeat: no-repeat;
    background-size: cover;

}
header{
    font-size: 25px;
    line-height: 0;
    text-align: center;
unicode-bidi: isolate;


}
a{
    color: rgb(253, 255, 255);
    text-decoration: underline 0.15em rgba(0, 0, 0, 0);
    transition: text-decoration-color 300ms;
}
a:hover{
    text-decoration-color: rgb(20, 172, 53);
    text-underline-offset: 0.4em;
}
#about{
    
    width: 100%;
    
}h1 {
    font-size: clamp(2rem, 3vw, 5rem);
    display: flex;
    color: rgb(245, 7, 213);
  }
  
  span {
    --stagger: -200ms;
    --delay: calc(var(--i) * var(--stagger, 200ms));
  }
  
  span > span {
    display: block;
    animation: bounce 2000ms var(--delay, 0ms) infinite;
    transform-origin: center bottom;
    z-index: 1;
  }
  
  span:not(span > span)::after {
    content: '';
    display: block;
    width: 100%;
    aspect-ratio: 1;
    background: hsl(var(--hue) 50% 45% / 0.1);
    transform: translate3d(0, 3.8em, 0) scaleY(0.3) scaleX(0.8);
    transform-origin: center top;
    border-radius: 100%;
    filter: blur(0.08em);
    animation: shadow 2000ms var(--delay, 0ms) infinite;
  }
  
  @keyframes bounce {
    0% {
      transform: translate3d(0, 0, 0) rotateY(0deg) scaleY(1);
      animation-timing-function: ease-in;
    }
    45% {
      transform: translate3d(0, 4em, 0) rotateY(180deg) scaleY(1);
      animation-timing-function: ease-in;
    }
    50% {
      transform: translate3d(0, 4em, 0) rotateY(180deg) scaleY(0.2);
      animation-timing-function: ease-out, ease-out, linear;
    }
    100% {
      transform: translate3d(0, 0, 0) rotateY(0) scaleY(1);
      animation-timing-function: ease-out;
    }
  }
  
  @keyframes shadow {
    0% {
      transform: translate3d(0, 3.8em, 0) scale3d(1.5, 0.3, 1);
      opacity: 0;
      animation-timing-function: ease-in;
    }
    45% {
      transform: translate3d(0, 3.8em, 0) scale3d(0.8, 0.2, 1);
      opacity: 1;
      animation-timing-function: ease-in;
    }
    50% {
      transform: translate3d(0, 3.8em, 0) scale3d(0.8, 0.2, 1);
      opacity: 1;
      animation-timing-function: linear;
    }
    100% {
      transform: translate3d(0, 3.8em, 0) scale3d(1.5, 0.3, 1);
      opacity: 0;
      animation-timing-function: ease-out;
    }
  }
  @property --_l {
    syntax: "<length>";
    initial-value: 0px;
    inherits: true;
  }
  @property --_r {
    syntax: "<length>";
    initial-value: 0px;
    inherits: true;
  }
  #m{
    float: right;
    border-radius: 20px;
    border: 3px double whitesmoke;
    width: 400px;
    padding-left: 40px;
    margin: 60px;
    box-shadow: rgba(255, 254, 254, 0.87) 0px -23px 25px 0px inset, rgba(250, 247, 247, 0.911) 0px -36px 30px 0px inset, rgba(58, 57, 57, 0.911) 0px -79px 40px 0px inset, rgba(247, 242, 242, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px; 
    --d: 18px;  /* the depth */
    --a: 20deg;
    --x: 10px;
  
     /* control the size */
    aspect-ratio: 1.1; /* you can use 1 as ratio but I found 1.1 a little better */
    object-fit: cover;
    padding-block: var(--d);
    transform: perspective(400px) rotateY(calc(var(--_i,1)*var(--a)));
    outline: var(--d) solid #0008;
    outline-offset: calc(-1*var(--d));
    --_d: calc(100% - var(--d));
    --_l: 0px;
    --_r: 0px;
    clip-path: polygon(
      var(--_l) calc(var(--_d) - var(--x)),
      var(--_l) calc(var(--d)  + var(--x)), 
      var(--d) var(--d),var(--_d) var(--d),
      calc(var(--_d) + var(--_r)) calc(var(--d)  + var(--x)),
      calc(var(--_d) + var(--_r)) calc(var(--_d) - var(--x)),  
      var(--_d) var(--_d),var(--d) var(--_d)
     );
    transition: transform .3s,--_r .15s,--_l .15s .15s;
    transition-timing-function: linear;
    cursor: pointer;
}#m:hover,
#m.alt
{
    --_l: var(--d);
    --_r: var(--d);
    --_i: -1;
    transition-delay: 0s,.15s,0s;
}#m.alt:hover {
    --_l: 0px;
    --_r: 0px;
    --_i: 1;
    transition-delay: 0s,0s,.15s;
  }
  
  /* we do a different animation for firefox since it doesn't support @property */
  @supports not (-webkit-mask: paint(p)) {
    #m,
    #m.alt{
      transition: .3s;
    }
    #m:hover,
    #m.alt:hover {
      --_i: 0;
      --_l: var(--d);
      --_r: 0px;
    }
  }

#address{
    padding-top: 10px;
text-align: center;
    font-size: 35px;
    color: aqua;
    
}
#par{
    margin: 20px;
    text-align: left;
    
    font-size: 25px;
    color: rgb(235, 247, 247);
}
footer{
    width: 100%;
    height: 50px;
    padding-top: 600px;
}
#google{
    width: 50px;
    height: 50px;
    
    aspect-ratio: 1;
    border-radius: 20px;
    opacity: .4;
    transition: .10s;
    cursor: pointer;
    
}
#google:hover{
    background-color: aqua;
    opacity: 2;
}
#facebook{
    width: 0px;
    height: 50px;
    --f: .1; /* the parallax factor (the smaller the better) */
    --r: 10px; /* radius */
    
    --_f: calc(100%*var(--f)/(1 + var(--f)));
    --_a: calc(90deg*var(--f));
    width: 50px; /* the image size */
    aspect-ratio: calc(1 + var(--f));
    object-fit: 50px;
    clip-path: inset(0 var(--_f) 0 0 round var(--r));
    transform: perspective(400px) var(--_t,rotateY(var(--_a)));
    transition: .5s;
    cursor: pointer;
}
  #facebook:hover {
    clip-path: inset(0 0 0 var(--_f) round var(--r));
    --_t: translateX(calc(-1*var(--_f))) rotateY(calc(-1*var(--_a)))
  }
#github{
    width: 50px;
    height: 50px;
    --f: .12; /* the parallax factor (the smaller the better) */
  
    --_f: calc(100%*var(--f)/(1 + var(--f)));
    /* the image size */
    aspect-ratio: calc(1 + var(--f));
    object-fit: cover;
    clip-path: inset(0 var(--_f) 0 0);
    transition: .5s;
    cursor: pointer;
}#github:hover{
    clip-path: inset(0 0 0 var(--_f));
  transform: translateX(calc(-1*var(--_f)))
}

    
